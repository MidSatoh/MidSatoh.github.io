<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on MID-S</title>
    <link>https://midsatoh.github.io/python/</link>
    <description>Recent content in Python on MID-S</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 13 Nov 2019 17:08:26 +0900</lastBuildDate>
    
	<atom:link href="https://midsatoh.github.io/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pythonの特徴</title>
      <link>https://midsatoh.github.io/python/python_aspects/</link>
      <pubDate>Mon, 18 Nov 2019 09:40:10 +0900</pubDate>
      
      <guid>https://midsatoh.github.io/python/python_aspects/</guid>
      <description>利用する、システムに採用する側から見た特徴 Pythonをこれから利用する側からみた特徴としては「豊富なライブラリ」「様々なサイトやサービスで利用されている実績」が有利な特徴と言える。特に、ライブラリについては多岐にわたっている。
 画像／動画処理 数値計算／統計処理 ファイル入出力処理 データベース処理 ネットワーク処理  などの、自力で作成するには複雑な作業やセキュリティの考慮などが必要な処理や、多くの場所で利用可能な処理について、様々なライブラリが配布されている。 このようなライブラリを利用し、組み合わせることで用途に合わせたプログラムを作成することが可能となっている。
プログラムを作成する、実装する側から見た特徴 Pythonを使って実際にプログラムを作成する・実装する立場から見た特徴としては、「学習コストの低さ」が大きな特徴と言えるであろう。
例えば、「変数numに代入された値が10より大きい場合は&amp;rdquo;Over 10&amp;rdquo;と表示、そうでなければ&amp;rdquo;Other&amp;rdquo;と表示」というプログラムを、Javaで書いた場合とPythonで書いた場合で比較してみる。
Javaで書いた場合(その1) class Sample { public static void main(String[] args){ int num = 11; if (num &amp;gt; 10){ System.out.println(&amp;#34;Over 10&amp;#34;); } else { System.out.println(&amp;#34;Other&amp;#34;); } } } Javaで書いた場合(その2) class Sample { public static void main(String[] args){ int num = 11; if (num &amp;gt; 10) System.out.println(&amp;#34;Over 10&amp;#34;); else System.out.println(&amp;#34;Other&amp;#34;); } } Pythonで書いた場合 num = 11 if num &amp;gt; 10: print(&amp;#39;Over 10&amp;#39;) else: print(&amp;#39;Other&amp;#39;) Javaの場合、同じ内容を記載した場合でも{}の有無、インデント（字下げ）の位置などが揃っていなくとも記述が可能。また、スクリプトを実行する場合でも必ずクラスが必要であるなどのルールが複雑である。 Pythonの場合、スクリプト実行の場合は必要な処理をファイルに記載するのみで実行が可能である。また、記述ルールにインデント（字下げ）が含まれるため、Pythonの初心者でも、熟練者でも同一の内容であれば基本的な記述方法は同じである。</description>
    </item>
    
  </channel>
</rss>